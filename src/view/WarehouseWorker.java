package view;

import controller.SearchController;
import controller.WarehouseWorkerController;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import model.DisplaySearchSignificantRecord;

public class WarehouseWorker extends javax.swing.JFrame {

    /**
     * Creates new form WarehouseWorker
     */
    public WarehouseWorker() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        pnlAddWarehouseData.setVisible(true);
    }

    public WarehouseWorker(int warehouseWorker) throws IOException {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        pnlAddWarehouseData.setVisible(true);
    }

    // clear input fields
    public void reset() {
        txtProductUniqueCode.setText("");
        txtHarvestDate.setText("");
        txtFarmLocation.setText("");
        txtProductionDate.setText("");
        txtProductionLocation.setText("");
        txtExpiryDate.setText("");
        txtStorageDate.setText("");
        txtStorageDate.setEnabled(false);
        txtStorageDate.setBackground(new java.awt.Color(250, 250, 250));
        txtStorageLocation.setText("");
        txtStorageLocation.setEnabled(false);
        txtStorageLocation.setBackground(new java.awt.Color(250, 250, 250));
    }

    SearchController searchController = new SearchController();
    WarehouseWorkerController warehouseWorkerController = new WarehouseWorkerController();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlContainer = new javax.swing.JPanel();
        pnlTopNav = new javax.swing.JPanel();
        lblProductOriginTracer = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        pnlAddWarehouseData = new javax.swing.JPanel();
        lblStorageDate = new javax.swing.JLabel();
        lblStorageLocation = new javax.swing.JLabel();
        txtStorageDate = new javax.swing.JTextField();
        txtStorageLocation = new javax.swing.JTextField();
        lblAddWarehouseData = new javax.swing.JLabel();
        txtProductUniqueCode = new javax.swing.JTextField();
        lblProductUniqueCode = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        lblHarvestDate = new javax.swing.JLabel();
        txtHarvestDate = new javax.swing.JTextField();
        lblFarmLocation = new javax.swing.JLabel();
        txtFarmLocation = new javax.swing.JTextField();
        txtProductionDate = new javax.swing.JTextField();
        lblProductionDate = new javax.swing.JLabel();
        lblExpiryDate = new javax.swing.JLabel();
        txtExpiryDate = new javax.swing.JTextField();
        lblProductionLocation = new javax.swing.JLabel();
        txtProductionLocation = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Product Origin Tracer - Warehouse Worker");

        pnlContainer.setBackground(new java.awt.Color(255, 255, 255));
        pnlContainer.setPreferredSize(new java.awt.Dimension(1300, 800));

        pnlTopNav.setBackground(new java.awt.Color(245, 245, 245));
        pnlTopNav.setPreferredSize(new java.awt.Dimension(1300, 50));

        lblProductOriginTracer.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        lblProductOriginTracer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblProductOriginTracer.setText("Product Origin Tracer - Warehouse");

        btnLogout.setBackground(new java.awt.Color(221, 98, 98));
        btnLogout.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(255, 255, 255));
        btnLogout.setText("Log Out");
        btnLogout.setBorder(null);
        btnLogout.setOpaque(true);
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTopNavLayout = new javax.swing.GroupLayout(pnlTopNav);
        pnlTopNav.setLayout(pnlTopNavLayout);
        pnlTopNavLayout.setHorizontalGroup(
            pnlTopNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopNavLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(lblProductOriginTracer, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(279, 279, 279))
        );
        pnlTopNavLayout.setVerticalGroup(
            pnlTopNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopNavLayout.createSequentialGroup()
                .addGroup(pnlTopNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductOriginTracer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(112, 112, 112))
        );

        pnlAddWarehouseData.setBackground(new java.awt.Color(255, 255, 255));
        pnlAddWarehouseData.setPreferredSize(new java.awt.Dimension(1300, 700));

        lblStorageDate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblStorageDate.setText("Storage Date");

        lblStorageLocation.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblStorageLocation.setText("Storage Location");

        txtStorageDate.setBackground(new java.awt.Color(250, 250, 250));
        txtStorageDate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtStorageDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(219, 219, 219)));
        txtStorageDate.setEnabled(false);

        txtStorageLocation.setBackground(new java.awt.Color(250, 250, 250));
        txtStorageLocation.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtStorageLocation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(219, 219, 219)));
        txtStorageLocation.setEnabled(false);

        lblAddWarehouseData.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        lblAddWarehouseData.setText("Add Warehouse Data");

        txtProductUniqueCode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtProductUniqueCode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(219, 219, 219)));

        lblProductUniqueCode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblProductUniqueCode.setText("Product Unique Code");

        btnSearch.setBackground(new java.awt.Color(73, 161, 236));
        btnSearch.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.setBorder(null);
        btnSearch.setOpaque(true);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblHarvestDate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblHarvestDate.setText("Harvest Date");

        txtHarvestDate.setBackground(new java.awt.Color(250, 250, 250));
        txtHarvestDate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtHarvestDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(219, 219, 219)));
        txtHarvestDate.setEnabled(false);

        lblFarmLocation.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblFarmLocation.setText("Farm Location");

        txtFarmLocation.setBackground(new java.awt.Color(250, 250, 250));
        txtFarmLocation.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtFarmLocation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(219, 219, 219)));
        txtFarmLocation.setEnabled(false);

        txtProductionDate.setBackground(new java.awt.Color(250, 250, 250));
        txtProductionDate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtProductionDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(219, 219, 219)));
        txtProductionDate.setEnabled(false);

        lblProductionDate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblProductionDate.setText("Production Date");

        lblExpiryDate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblExpiryDate.setText("Expiry Date");

        txtExpiryDate.setBackground(new java.awt.Color(250, 250, 250));
        txtExpiryDate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtExpiryDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(219, 219, 219)));
        txtExpiryDate.setEnabled(false);

        lblProductionLocation.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblProductionLocation.setText("Production Location");

        txtProductionLocation.setBackground(new java.awt.Color(250, 250, 250));
        txtProductionLocation.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtProductionLocation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(219, 219, 219)));
        txtProductionLocation.setEnabled(false);

        btnSave.setBackground(new java.awt.Color(73, 161, 236));
        btnSave.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.setBorder(null);
        btnSave.setOpaque(true);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(221, 98, 98));
        btnReset.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Reset");
        btnReset.setBorder(null);
        btnReset.setOpaque(true);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAddWarehouseDataLayout = new javax.swing.GroupLayout(pnlAddWarehouseData);
        pnlAddWarehouseData.setLayout(pnlAddWarehouseDataLayout);
        pnlAddWarehouseDataLayout.setHorizontalGroup(
            pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddWarehouseDataLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAddWarehouseData)
                    .addGroup(pnlAddWarehouseDataLayout.createSequentialGroup()
                        .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblStorageDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblProductUniqueCode, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHarvestDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblProductionDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblExpiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAddWarehouseDataLayout.createSequentialGroup()
                                .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtStorageDate, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtProductUniqueCode, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHarvestDate, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtProductionDate, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(100, 100, 100)
                                .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlAddWarehouseDataLayout.createSequentialGroup()
                                        .addComponent(lblFarmLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtFarmLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlAddWarehouseDataLayout.createSequentialGroup()
                                        .addComponent(lblProductionLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtProductionLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlAddWarehouseDataLayout.createSequentialGroup()
                                        .addComponent(lblStorageLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtStorageLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(txtExpiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(475, Short.MAX_VALUE))
        );
        pnlAddWarehouseDataLayout.setVerticalGroup(
            pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddWarehouseDataLayout.createSequentialGroup()
                .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddWarehouseDataLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblAddWarehouseData)
                        .addGap(40, 40, 40)
                        .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtProductUniqueCode, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblProductUniqueCode, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHarvestDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHarvestDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFarmLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFarmLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtProductionDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblProductionDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblProductionLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProductionLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblExpiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtExpiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStorageDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblStorageDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddWarehouseDataLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStorageLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStorageLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(200, 200, 200)
                .addGroup(pnlAddWarehouseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(304, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlContainerLayout = new javax.swing.GroupLayout(pnlContainer);
        pnlContainer.setLayout(pnlContainerLayout);
        pnlContainerLayout.setHorizontalGroup(
            pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTopNav, javax.swing.GroupLayout.DEFAULT_SIZE, 1597, Short.MAX_VALUE)
            .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlContainerLayout.createSequentialGroup()
                    .addComponent(pnlAddWarehouseData, javax.swing.GroupLayout.DEFAULT_SIZE, 1591, Short.MAX_VALUE)
                    .addGap(0, 6, Short.MAX_VALUE)))
        );
        pnlContainerLayout.setVerticalGroup(
            pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContainerLayout.createSequentialGroup()
                .addComponent(pnlTopNav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(756, 756, 756))
            .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContainerLayout.createSequentialGroup()
                    .addContainerGap(54, Short.MAX_VALUE)
                    .addComponent(pnlAddWarehouseData, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(8, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 1597, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 806, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // logout button
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        int logoutConfirmation = JOptionPane.showConfirmDialog(null, "Are you sure you want to logout?", "Warning", JOptionPane.YES_NO_OPTION);

        if (logoutConfirmation == JOptionPane.YES_OPTION) {
            Login login = new Login();
            login.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    // search product unique code button
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (txtProductUniqueCode.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill in a product unique code!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                // search product unique code method
                DisplaySearchSignificantRecord searchResult = searchController.search(txtProductUniqueCode.getText());
                if (searchResult.isExist()) {
                    txtHarvestDate.setText(searchResult.searchResult().harvestDate());
                    txtFarmLocation.setText(searchResult.searchResult().farmLocation());
                    txtProductionDate.setText(searchResult.searchResult().productionDate());
                    txtProductionLocation.setText(searchResult.searchResult().productionLocation());
                    txtExpiryDate.setText(searchResult.searchResult().expiryDate());
                    txtStorageDate.setEnabled(true);
                    txtStorageDate.setBackground(new java.awt.Color(255, 255, 255));
                    txtStorageLocation.setEnabled(true);
                    txtStorageLocation.setBackground(new java.awt.Color(255, 255, 255));
                } else {
                    JOptionPane.showMessageDialog(null, "Product does not exist!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                Logger.getLogger(WarehouseWorker.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    // add warehouse data save button
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (txtStorageDate.getText().equals("") || txtStorageLocation.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill in all details!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                // blockchain method
                //check if product id exist or not
                boolean isSuccess = warehouseWorkerController.addWarehouseData(
                        txtProductUniqueCode.getText(),
                        txtStorageDate.getText(),
                        txtStorageLocation.getText()
                );
                if (isSuccess) {
                    JOptionPane.showMessageDialog(null, "Information added!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    reset();
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to add information!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                Logger.getLogger(WarehouseWorker.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    // reset input fields button
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WarehouseWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WarehouseWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WarehouseWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WarehouseWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WarehouseWorker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel lblAddWarehouseData;
    private javax.swing.JLabel lblExpiryDate;
    private javax.swing.JLabel lblFarmLocation;
    private javax.swing.JLabel lblHarvestDate;
    private javax.swing.JLabel lblProductOriginTracer;
    private javax.swing.JLabel lblProductUniqueCode;
    private javax.swing.JLabel lblProductionDate;
    private javax.swing.JLabel lblProductionLocation;
    private javax.swing.JLabel lblStorageDate;
    private javax.swing.JLabel lblStorageLocation;
    private javax.swing.JPanel pnlAddWarehouseData;
    private javax.swing.JPanel pnlContainer;
    private javax.swing.JPanel pnlTopNav;
    private javax.swing.JTextField txtExpiryDate;
    private javax.swing.JTextField txtFarmLocation;
    private javax.swing.JTextField txtHarvestDate;
    private javax.swing.JTextField txtProductUniqueCode;
    private javax.swing.JTextField txtProductionDate;
    private javax.swing.JTextField txtProductionLocation;
    private javax.swing.JTextField txtStorageDate;
    private javax.swing.JTextField txtStorageLocation;
    // End of variables declaration//GEN-END:variables
}
